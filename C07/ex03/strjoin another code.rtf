{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red152\green66\blue3;\red255\green255\blue255;\red22\green21\blue22;
\red67\green67\blue67;\red16\green120\blue67;\red0\green0\blue255;\red19\green85\blue52;\red98\green0\blue117;
\red152\green0\blue15;}
{\*\expandedcolortbl;;\cssrgb\c66667\c33333\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c11373\c10980\c11373;
\cssrgb\c33333\c33333\c33333;\cssrgb\c0\c53333\c33333;\cssrgb\c0\c0\c100000;\cssrgb\c6667\c40000\c26667;\cssrgb\c46667\c0\c53333;
\cssrgb\c66667\c6667\c6667;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 * ************************************************************************** */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*                                                                            */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*                                                        :::      ::::::::   */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*   ft_strjoin.c                                       :+:      :+:    :+:   */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*                                                    +:+ +:+         +:+     */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*   By: athekkep <athekkep@42abudhabi.ae>          +#+  +:+       +#+        */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*                                                +#+#+#+#+#+   +#+           */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*   Created: 2021/06/01 16:46:04 by athekkep          #+#    #+#             */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*   Updated: 2021/06/03 13:36:11 by athekkep         ###   ########.fr       */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /*                                                                            */\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 /* ************************************************************************** */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 #include <unistd.h>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include <stdlib.h>\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 char\cf4 \strokec4 	\cf6 \strokec6 *\cf7 \strokec7 ft_strcat\cf4 \strokec4 (\cf6 \strokec6 char\cf4 \strokec4  \cf6 \strokec6 *\cf4 \strokec4 dest, \cf6 \strokec6 char\cf4 \strokec4  \cf6 \strokec6 *\cf4 \strokec4 src)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4  i;\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4  j;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	i = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 while\cf4 \strokec4  (dest[i] != \cf10 \strokec10 '\\0'\cf4 \strokec4 )\cb1 \
\cb3 		i++;\cb1 \
\cb3 	j = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 while\cf4 \strokec4  (src[j] != \cf10 \strokec10 '\\0'\cf4 \strokec4 )\cb1 \
\cb3 	\{\cb1 \
\cb3 		dest[i] = src[j];\cb1 \
\cb3 		i++;\cb1 \
\cb3 		j++;\cb1 \
\cb3 	\}\cb1 \
\cb3 	dest[i] = \cf10 \strokec10 '\\0'\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 return\cf4 \strokec4  (dest);\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 int\cf4 \strokec4 		\cf7 \strokec7 ft_strlen\cf4 \strokec4 (\cf6 \strokec6 char\cf4 \strokec4  \cf6 \strokec6 *\cf4 \strokec4 str)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4  i;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	i = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 while\cf4 \strokec4  (str[i] != \cf10 \strokec10 '\\0'\cf4 \strokec4 )\cb1 \
\cb3 		i++;\cb1 \
\cb3 	\cf9 \strokec9 return\cf4 \strokec4  (i);\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 char\cf4 \strokec4 	\cf6 \strokec6 *\cf7 \strokec7 ft_strjoin\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  size, \cf6 \strokec6 char\cf4 \strokec4  \cf6 \strokec6 **\cf4 \strokec4 strs, \cf6 \strokec6 char\cf4 \strokec4  \cf6 \strokec6 *\cf4 \strokec4 sep)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf6 \strokec6 char\cf4 \strokec4 	\cf6 \strokec6 *\cf4 \strokec4 ret;\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4 		i;\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4 		j;\cb1 \
\cb3 	\cf6 \strokec6 int\cf4 \strokec4 		k;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	i = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	j = ft_strlen(sep);\cb1 \
\cb3 	k = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 while\cf4 \strokec4  (i < size)\cb1 \
\cb3 	\{\cb1 \
\cb3 		k += ft_strlen(strs[i]);\cb1 \
\cb3 		i++;\cb1 \
\cb3 	\}\cb1 \
\cb3 	ret = malloc(k + (j * (size - \cf8 \strokec8 1\cf4 \strokec4 )));\cb1 \
\cb3 	i = \cf8 \strokec8 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf9 \strokec9 while\cf4 \strokec4  (i < size)\cb1 \
\cb3 	\{\cb1 \
\cb3 		ret = ft_strcat(ret, strs[i]);\cb1 \
\cb3 		i++;\cb1 \
\cb3 		\cf9 \strokec9 if\cf4 \strokec4  (i < size)\cb1 \
\cb3 			ret = ft_strcat(ret, sep);\cb1 \
\cb3 	\}\cb1 \
\cb3 	\cf9 \strokec9 return\cf4 \strokec4  (ret);\cb1 \
\cb3 \}\cb1 \
}