{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red173\green169\blue32;\red32\green32\blue32;\red88\green118\blue71;
\red191\green100\blue38;\red254\green187\blue91;\red153\green168\blue186;\red86\green132\blue173;\red109\green109\blue109;
}
{\*\expandedcolortbl;;\csgenericrgb\c67843\c66275\c12549;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c34510\c46275\c27843;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c42745\c42745\c42745;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Alternate code\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb3 #include \cf4 <stdio.h>\
\cf2 #include \cf4 <unistd.h>\
\cf5 void \cf6 ft_putchar\cf7 (\cf5 char \cf7 c)\
\{\
    write(\cf8 1\cf5 , \cf7 &c\cf5 , \cf8 1\cf7 )\cf5 ;\
\
\cf7 \}\
\cf5 int \cf6 ft_check\cf7 (\cf5 char \cf7 *str\cf5 , int \cf7 i)\
\{\
    \cf5 int \cf7 chk\cf5 ;\
\
    \cf7 chk = \cf8 0\cf5 ;\
    if\cf7 (str[i - \cf8 1\cf7 ] >= \cf4 '0' \cf7 && str[i - \cf8 1\cf7 ] <= \cf4 '9'\cf7 )\
    \{\
        chk = \cf8 1\cf5 ;\
    \cf7 \}\
    \cf5 else if \cf7 (str[i - \cf8 1\cf7 ] >= \cf4 'a' \cf7 && str[i - \cf8 1\cf7 ] <= \cf4 'z'\cf7 )\
    \{\
        chk = \cf8 1\cf5 ;\
    \cf7 \}\
    \cf5 else if \cf7 (str[i - \cf8 1\cf7 ] >= \cf4 'A' \cf7 && str[i - \cf8 1\cf7 ] <= \cf4 'Z'\cf7 )\
    \{\
        chk = \cf8 1\cf5 ;\
    \cf7 \}\
    \cf5 return \cf7 chk\cf5 ;\
\cf7 \}\
\
\cf5 char \cf7 *	\cf6 ft_str_is_alpha\cf7 (\cf5 char \cf7 *str)\
\{\
    \cf5 int \cf7 i\cf5 ;\
    char \cf7 prev\cf5 ;\
    int \cf7 flag\cf5 ;\
\
    \cf7 i = \cf8 0\cf5 ; \cf9 // to check start\
    \cf5 while\cf7 (str[i] != \cf4 '\cf5 \\0\cf4 '\cf7 )\
    \{\
        flag = ft_check(str\cf5 ,\cf7 i)\cf5 ;\
        if \cf7 (flag == \cf8 0\cf7 )\
        \{\
            \cf5 if \cf7 (str[i] >= \cf4 'a' \cf7 && str[i] <= \cf4 'z'\cf7 )\
            \{\
                str[i] = str[i] - \cf8 32\cf5 ;\
            \cf7 \}\
        \}\
        \cf5 else\
        \cf7 \{\
            \cf5 if \cf7 (str[i] >= \cf4 'A' \cf7 && str[i] <= \cf4 'Z'\cf7 )\
            \{\
                str[i] = str[i] + \cf8 32\cf5 ;\
            \cf7 \}\
        \}\
        i++\cf5 ;\
    \cf7 \}\
    \cf5 return \cf7 (str)\cf5 ;\
\cf7 \}\
\
\cf5 int \cf6 main\cf7 (\cf5 void\cf7 )\
\{\
    \cf5 char \cf7 str[\cf8 61\cf7 ] = \cf4 "salut, comment tu vas ? 42mots quarante-deux; cinQuante+et+un"\cf5 ;\
    char \cf7 *ptr = ft_str_is_alpha(str)\cf5 ;\
\
    while \cf7 (*ptr != \cf4 '\cf5 \\0\cf4 '\cf7 )\
    \{\
        ft_putchar(*ptr)\cf5 ;\
        \cf7 ptr++\cf5 ;\
    \cf7 \}\
\}\
}